#
#  log4j properties file that uses the following appenders:
#
#  1. C1  to output log messages to the console using ConsoleAppender
#  2. R1   to output log messages to a log file using the RollingFileAppender
#  
#  WM B2B users using NT should start server from command prompt to see console messages
#
#log4j.rootLogger=DEBUG, R1, JDBC2
#log4j.rootLogger=ERROR, R1, D, JDBC2
#log4j.rootLogger=DEBUG, JDBC2
log4j.logger.KL=DEBUG, JDBC2
#log4j.appender.C1=org.apache.log4j.ConsoleAppender
#log4j.appender.C1.layout=org.apache.log4j.PatternLayout

# Print the date in ISO 8601 format
#log4j.appender.C1.layout.ConversionPattern=%d %-5p [%c] - %m%n

# R is the RollingFileAppender that outputs to a rolling log
log4j.appender.R1=org.apache.log4j.RollingFileAppender
# change file name and path on following line to specify logfile destination
log4j.appender.R1.File=logs/test.log

log4j.appender.R1.layout=org.apache.log4j.PatternLayout
# Next line is editited to fit.
log4j.appender.R1.layout.ConversionPattern=[slf5s.start]%d{DATE}[slf5s.DATE]%n\%p[slf5s.PRIORITY]%n%c[slf5s.CATEGORY]%n %l[slf5s.LOCATION]%n%m[slf5s.MESSAGE]%n%n
log4j.appender.R1.MaxFileSize=100KB
log4j.appender.R1.MaxBackupIndex=1





# JDBC appender directly, 2b)
log4j.appender.JDBC2=org.apache.log4j.jdbcplus.JDBCAppender
# created db alias in aliases.conf: danko = D:\Programme\Firebird\Firebird1.5\Data\danko.fdb
#log4j.appender.JDBC2.url=jdbc:mysql://localhost/test
log4j.appender.JDBC2.url=jdbc:oracle:thin:@192.168.13.223:1521:vodafone
#log4j.appender.JDBC2.dbclass=com.mysql.jdbc.Driver
log4j.appender.JDBC2.dbclass=oracle.jdbc.driver.OracleDriver
#log4j.appender.JDBC2.dbclass=com.mysql.jdbc.jdbc2.optional.MysqlDataSource
log4j.appender.JDBC2.username=wm_data
log4j.appender.JDBC2.password=wm_data
#log4j.appender.JDBC2.sql=INSERT INTO wmlog (msg, msg_xml, dt) VALUES ('@MSG@', '@MDC:KL_xml@', cast ('@LAYOUT:3@ @LAYOUT:4@' as timestamp))
log4j.appender.JDBC2.sql=INSERT INTO wmlog (msg, msg_xml, dt, sid, prio, sn, logger, server) VALUES ('@MSG@', '@MDC:KL_xml@', systimestamp, '@MDC:KL_sid@', '@PRIO@', '@MDC:KL_sn@', '@CAT@', '@MDC:KL_serv@')
#log4j.appender.JDBC2.sql=INSERT INTO wmlog (msg, msg_xml, dt, sid, sn) VALUES ('@MSG@', '@MDC:KL_xml@', systimestamp, '@MDC:KL_sid@', '@MDC:KL_sn@')
#log4j.appender.JDBC2.sql=INSERT INTO wmlog (msg, msg_xml, dt) VALUES ('@MSG@', '@MDC:KL_xml@', to_date(@TIMESTAMP@, 'yyyy-MM-dd HH24:MI:SS.FF')
#next: example for most functions/log types
#log4j.appender.JDBC2.sql=INSERT INTO LOGTEST (id, prio, iprio, cat, thread, msg, layout_msg, throwable, ndc, mdc, mdc2, info, addon, the_date, the_time, the_timestamp, created_by) VALUES (@INC@, '@PRIO@', @IPRIO@, '@CAT@', '@THREAD@', '@MSG@', '@LAYOUT:1@', '@THROWABLE@', '@NDC@', '@MDC:MyMDC@', '@MDC:MyMDC2@', 'info timestamp: @TIMESTAMP@', '@LAYOUT@', cast ('@LAYOUT:3@' as date), cast ('@LAYOUT:4@' as time), cast ('@LAYOUT:3@ @LAYOUT:4@' as timestamp), 'me')
log4j.appender.JDBC2.layout=org.apache.log4j.PatternLayout
# conversion pattern with 4 parts separated by #, second is empty
log4j.appender.JDBC2.layout.ConversionPattern=[%t] %m %l##%d{dd.MM.yyyy}#%d{HH:mm:ss}
log4j.appender.JDBC2.layoutPartsDelimiter=#
log4j.appender.JDBC2.buffer=1
log4j.appender.JDBC2.commit=true
log4j.appender.JDBC2.quoteReplace=true
log4j.appender.JDBC2.throwableMaxChars=3000


log4j.appender.D=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.D.URL=jdbc:mysql://localhost/test
log4j.appender.D.driver=com.mysql.jdbc.Driver
log4j.appender.D.user=root
log4j.appender.D.password=test
log4j.appender.D.layout=org.apache.log4j.PatternLayout
##log4j.appender.D.sql=INSERT INTO test_log (Date, Logger, Priority, Message) VALUES ('%d{yyyy-MM-dd HH:mm:ss}', '%c', '%p', '%m')
log4j.appender.D.sql=INSERT INTO test_log (msg) VALUES ('%m')

